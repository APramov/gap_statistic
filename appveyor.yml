environment:

  global:
    CHANNEL: nightly

  matrix:

    - PYTHON: "C:\\Python36"
      TARGET: i686-pc-windows-gnu

    - PYTHON: "C:\\Python36"
      TARGET: i686-pc-windows-msvc

    - PYTHON: "C:\\Python36"
      TARGET: x86_64-pc-windows-gnu

    - PYTHON: "C:\\Python36"
      TARGET: x86_64-pc-windows-msvc

init:
  - set PATH=%PYTHON%;%PYTHON%\Scripts;C:\MinGW\msys\1.0\bin;%PATH%
  - "git config --system http.sslcainfo \"C:\\Program Files\\Git\\mingw64\\ssl\\certs\\ca-bundle.crt\""
  - "%PYTHON%/python -V"
  - "%PYTHON%/python -c \"import struct;print(8 * struct.calcsize(\'P\'))\""

install:
  - "%PYTHON%/Scripts/easy_install -U pip"
  - "%PYTHON%/Scripts/pip install wheel"
  - ps: >-
      If ($Env:TARGET -eq 'x86_64-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw64\bin'
      } ElseIf ($Env:TARGET -eq 'i686-pc-windows-gnu') {
        $Env:PATH += ';C:\msys64\mingw32\bin'
      }
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y --default-host %TARGET% --default-toolchain %CHANNEL%
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustc -Vv
  - cargo -V

cache:
  - C:\Users\appveyor\.cargo\registry

build: false

test_script:
  - cargo build --release
  - cargo test

after_test:
  - "%PYTHON%/python setup.py --command-packages wheel bdist_wheel"
  - ps: "ls dist"

artifacts:
  - path: dist\*